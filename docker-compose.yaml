services:

  ollama:
    image: ollama/ollama
    environment:
      - OLLAMA_NO_PRELOAD=1
    ports:
      - 11434:11434

  ollama_init:
    image: curlimages/curl
    environment:
      - API_URL=ollama:11434
      - MODEL_NAME=tinyllama
    depends_on:
      - ollama
    restart: no
    entrypoint: [ "sh", "-c", 'curl -X POST "$${API_URL}"/api/pull -d "{\"model\": \"$${MODEL_NAME}\"}"' ] 

  knowledgebase:
    image: semitechnologies/weaviate:latest
    ports:
      - "711:711"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCES_ENABLED: "true"
      ENABLE_API_BASED_MODULES: "true"
    network_mode: "host"
    restart: on-failure:0
    command:
      - --port
      - "711"
      - --scheme
      - http

  jira_bot:
    image: ghcr.io/bmln/jira_bot
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.13.3

        #dependencies
        RUN apt-get update
        RUN pip install git+https://github.com/pypa/pipenv.git@main

        #resources
        COPY jira_bot /opt/jira_bot
        COPY Pipfile /opt/jira_bot/Pipfile

        #setup
        WORKDIR /opt/jira_bot
        RUN mkdir resources

        RUN pipenv install
        RUN awk '/^\[packages\]/ {flag=1; next} /^\[/{flag=0} flag && NF && $1 !~ /^#/ {gsub(/ =.*/, "", $1); print $1}' chatbot/Pipfile data/Pipfile | xargs -n1 pipenv install

        

        RUN cat <<'EOF' > init.sh
        #!/bin/sh

        SKIP_INIT=$${SKIP_INIT:-"false"}
        DATA_DIR=$${DATA_DIR:-"./resources"}


        if [ "$$SKIP_INIT" = "false" ]; then   
          echo "Started data initialization..."         
          pipenv run python init.py $$(find $$DATA_DIR -maxdepth 1 -type f -print0 | xargs -0)
          
          if [ "$$?" != 0 ]; then
            return 1
          fi

          echo "Finished data initialization!"
        fi
        
        echo "Started bot initialization..."
        pipenv run python main.py
        EOF


        ENTRYPOINT ["/bin/sh", "init.sh"]
    environment:
      SKIP_INIT: "true" #"true"
      JIRA_URL: ${JIRA_URL}
      JIRA_AUTH_EMAIL: ${JIRA_AUTH_EMAIL}
      JIRA_AUTH_TOKEN: ${JIRA_AUTH_TOKEN}
      JIRA_SERVICEDESK: ${JIRA_SERVICEDESK}
      CHATBOT_KB_HOST: ${CHATBOT_KB_HOST}
      CHATBOT_KB_PORT: ${CHATBOT_KB_PORT}
      CHATBOT_KB_COLLECTION: ${CHATBOT_KB_COLLECTION}
      CHATBOT_ENCODER_MODEL: ${CHATBOT_ENCODER_MODEL}
      CHATBOT_GENERATOR_MODEL: ${CHATBOT_GENERATOR_MODEL}
      CHATBOT_GENERATOR_ENDPOINT: ${CHATBOT_GENERATOR_ENDPOINT}
    network_mode: "host"
    depends_on:
      knowledgebase:
        condition: service_started
      ollama_init:
        condition: service_completed_successfully
          
